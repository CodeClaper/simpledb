#include "data.h"
#ifndef CONST_H
#define CONST_H

//COMMON NODE HEADER LAYOUT
#define IS_OBSOLUTE_SIZE  sizeof(uint8_t)
#define IS_OBSOLUTE_OFFSET  0
#define NODE_TYPE_SIZE  sizeof(uint8_t)
#define NODE_TYPE_OFFSET  IS_OBSOLUTE_SIZE
#define IS_ROOT_SIZE  sizeof(uint8_t)
#define IS_ROOT_OFFSET  (IS_OBSOLUTE_SIZE + NODE_TYPE_SIZE)
#define PARENT_POINTER_SIZE  sizeof(uint32_t)
#define PARENT_POINTER_OFFSET  (IS_OBSOLUTE_SIZE + NODE_TYPE_SIZE + IS_ROOT_SIZE)
#define COMMON_NODE_HEADER_SIZE  (IS_OBSOLUTE_SIZE + NODE_TYPE_SIZE + IS_ROOT_SIZE + PARENT_POINTER_SIZE)

//ROOT NODE HEADER LAYOUT
#define ROOT_NODE_META_COLUMN_SIZE_SIZE  sizeof(uint32_t)
#define ROOT_NODE_META_COLUMN_SIZE_OFFSET  COMMON_NODE_HEADER_SIZE
#define ROOT_NODE_META_COLUMN_NAME_SIZE  MAX_COLUMN_NAME_LEN
#define ROOT_NODE_META_COLUMN_TYPE_SIZE  sizeof(uint32_t)
#define ROOT_NODE_META_COLUMN_LENGTH_SIZE  sizeof(uint32_t)
#define ROOT_NODE_IS_PRIMARY_SIZE  sizeof(uint8_t)
#define ROOT_NODE_META_COLUMN_TABLE_NAME_SIZE  MAX_TABLE_NAME_LEN
#define ROOT_NODE_SYS_RESERVED_SIZE  sizeof(uint8_t)
#define ROOT_NODE_IS_UNIQUE_SIZE  sizeof(uint8_t)
#define ROOT_NODE_NOT_NULL_SIZE  sizeof(uint8_t)
#define ROOT_NODE_ARRAY_DIM_SIZE sizeof(uint32_t)
#define ROOT_NODE_ARRAY_NUM_SIZE sizeof(uint32_t)
#define ROOT_NODE_META_COLUMN_SIZE (ROOT_NODE_META_COLUMN_NAME_SIZE + ROOT_NODE_META_COLUMN_TYPE_SIZE + \
                                    ROOT_NODE_META_COLUMN_LENGTH_SIZE + ROOT_NODE_IS_PRIMARY_SIZE + \
                                    ROOT_NODE_META_COLUMN_TABLE_NAME_SIZE + ROOT_NODE_SYS_RESERVED_SIZE + \
                                    ROOT_NODE_IS_UNIQUE_SIZE + ROOT_NODE_NOT_NULL_SIZE + \
                                    ROOT_NODE_ARRAY_DIM_SIZE + ROOT_NODE_ARRAY_NUM_SIZE)

#define ROOT_NODE_META_COLUMN_OFFSET  (ROOT_NODE_META_COLUMN_SIZE_OFFSET + ROOT_NODE_META_COLUMN_SIZE_SIZE)

//LEAF NODE HEADER LAYOUT
#define CELL_NUM_SIZE  sizeof(uint32_t)
#define CELL_NUM_OFFSET  COMMON_NODE_HEADER_SIZE              
#define LEAF_NODE_NEXT_LEAF_SIZE  sizeof(uint32_t)
#define LEAF_NODE_NEXT_LEAF_OFFSET  (CELL_NUM_OFFSET + CELL_NUM_SIZE)
#define LEAF_NODE_HEAD_SIZE  (COMMON_NODE_HEADER_SIZE + CELL_NUM_SIZE + LEAF_NODE_NEXT_LEAF_SIZE)

//LEAF NODE BODY LAYOUT
// #define LEAF_NODE_CELL_KEY_SIZE = sizeof(uint32_t);
#define LEAF_NODE_CELL_OFFSET  LEAF_NODE_HEAD_SIZE

//INTERNAL NODE HEAD LAYOUT
#define KEYS_NUM_SIZE  sizeof(uint32_t)
#define KEYS_NUM_OFFSET  COMMON_NODE_HEADER_SIZE
#define RIGHT_CHILD_SIZE  sizeof(uint32_t)
#define RIGHT_CHILD_OFFSET  (KEYS_NUM_OFFSET + KEYS_NUM_SIZE)
#define INTERNAL_NODE_HEAD_SIZE  (COMMON_NODE_HEADER_SIZE + KEYS_NUM_SIZE + RIGHT_CHILD_SIZE)

//INTERNAL NODE BODY LAYOUT
// #define INTERNAL_NODE_CELL_KEY_SIZE = sizeof(uint32_t);
#define INTERNAL_NODE_CELL_CHILD_SIZE  sizeof(uint32_t)
//#define INTERNAL_NODE_CELL_SIZE  INTERNAL_NODE_CELL_KEY_SIZE + INTERNAL_NODE_CELL_CHILD_SIZE;
#define INTERNAL_NODE_CELL_OFFSET  INTERNAL_NODE_HEAD_SIZE
#endif
